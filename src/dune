(include_subdirs unqualified)

(rule
 (copy %{project_root}/config.ml config.ml))

(subdir parsing
  (ocamllex lexer))

(subdir parsing
  (menhir (modules parser) (infer true) (flags --explain --table)
  ))

; all the modules necessary to parse
(library
  (name parse_lib)
  (public_name zrun.parse_lib)
  (wrapped false)
  (modules
    location ; position in the source file
    lexer parser parsetree ; parsing
  )
  (libraries menhirLib))

; all the modules necessary for building the ast after parsing
(library
  (name global_lib)
  (public_name zrun.global_lib)
  (wrapped false)
  (modules
    config misc ; general configuration and common global variables
    ident ; idents
    lident ; long idents
    defnames ; defined names by an equation
    util ; useful functions
    zelus ; the ast
    noinfo ; no information to be attached to patterns, expressions and eqs
    write ; computes defined variables for equations
    scoping ; associate unique names
    pp_tools ; pretty printer tools
    printer ; printer for the ast
  )
  (libraries parse_lib))

;; the ZRun interpreter
; all the necessary modules to make zrun except the entry modules
(library
  (name zrun_lib)
  (public_name zrun.zrun_lib)
  (wrapped false)
  (modules
    error ; error messages
    value ; the type of values
    genv ; the type of a global environment
    debug ; all the information for debuging
    primitives ; the value of primitives
    find ; find the current value and the last value of a variable
    match ; the evaluation of pattern matching
    arrays ; representing an array value
    records ; reprenting a record
    fix ; a bounded fix-point
    monad ; useful monad to deal with errors
    coiteration ; the main execution loop
    output ; printing
    forloop ; evaluation functions for for loops
    eval ; evaluation of an expression
  )   	 
  (libraries zrun.parse_lib zrun.global_lib))

; The ZRun interpreter
(executable
 (name zrun)
  (modes (byte exe))
  (modules 
    zrun; the main function
  )
  (libraries zrun.parse_lib zrun.global_lib zrun.zrun_lib)
  (promote (until-clean) (into ..)))

(install
 (package zrun)
 (section bin)
 (files (zrun.exe as zrun)))
