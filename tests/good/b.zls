(* let node sum_() returns (o)
  forward(2) returns (o init 42) do
    o = last o + 1
  done *)

let node sum_() returns (o)
  o  = forward(2) returns (o' init 42) do
         o' = last o' + 1
       done

(* let step self () =
  let m = { o = 42 } in
  m.o <- 42;
  for i = 0 to 1 do
    m.o <- m.o + 1;
  done; m.o *)

(*
let node f(i) returns (o)
  local j
  do init j = 2 and j = i and o = last* j + 1 done
*)

(*
let node sum_() returns (o)
  forward(2) returns (o init 42) do
    o = last o + 1
  done

let node sum_() returns (o)
  forward(2) returns (o) do
    o = last o
  done

let node main() = run sum_()
*)