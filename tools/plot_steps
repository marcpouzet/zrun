#!/bin/sh

# extract microsteps (needs -debugz, or Sundials patch)

ME=`basename $0`
COMMAND="$@"

if [ -z "${COMMAND}" ]; then
    printf "example usage: ${ME} ./prog.byte -sundialsI -maxt 10 -debugz > plot.pdf\n" 1>&2
    exit 1
fi

DATAFILE=`mktemp`
TIMEFILE=`mktemp`

time -f '%E real,%U user,%S sys' -o ${TIMEFILE} $@ -l > ${DATAFILE}
if [ ! $? ]; then
    rm -f ${DATAFILE} ${TIMEFILE}
    exit 1
fi

if grep -vq '/^.*find(\(.*\), .*).*/' ${DATAFILE}; then
    true
else
    printf "This script requires the logging of microsteps to stdout.\n" 1>&2
    printf "  - for most solvers, use the option: -debugz\n" 1>&2
    printf "  - but a patched version of sundials is required.\n" 1>&2
    rm -f ${DATAFILE} ${TIMEFILE}
    exit 2
fi

# work through zero-crossing columns
I=2
ZC_COLS=""
for c in `sed -n "s/^Z : [^ 	]*\(.*\)/\1/p" ${DATAFILE} | head -n 2 | tail -1`; do
    ZC_COLS="${ZC_COLS}, '' using 1:(\$$I>0 ? 1 : NaN)"
    I=`expr $I + 1`
done

TIME=`cat ${TIMEFILE}`

GPLOT=$(cat <<EOF
set terminal pdf font ",3";

set grid;
unset key;

set multiplot title '${COMMAND} (${TIME})' layout 3,1;
set lmargin 10;

set title 'cumulative microsteps';
plot '< sed -n "s/^.*find(\(.*\), .*).*/\1/p" ${DATAFILE}'
    using 1:(1) smooth cumulative;

old_v = NaN;
delta_v(x) = ( vD = x - old_v, old_v = x, vD);

set log y;
set title "step size";
plot '' using 1:(delta_v(\$1));

unset log y;
set ytics ("step" 0, "zc" 1);
set title "simulation steps and zero-crossings";
plot '< sed -n "s/^Z : \(.*\)/\1/p" ${DATAFILE}' using 1:(0) ${ZC_COLS};

EOF
)

gnuplot -e "${GPLOT}"
rm -f ${DATAFILE} ${TIMEFILE}

